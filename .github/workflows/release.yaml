name: Create New Release

# Create a new tag for release once a PR is merged.
# If a tag was created successfully - create a release.
on:
  workflow_dispatch:
    inputs:
      is_draft:
        description: Mark as Draft
        type: boolean
        default: true
      is_prerelease:
        description: Mark as Pre-Release
        type: boolean
        default: true

  pull_request:
    types: [ closed ]

permissions:
  contents: write

jobs:
  create_tag:
    name: Create Tag
    if: |
      github.event.pull_request.merged == true
      || github.event_name == 'workflow_dispatch'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba

      - name: Handle Tagging
        id: tagger
        run: |
          version="v$(uv version --short)"
          if [[ -z $(git tag -l $version) ]]; then
            echo "Creating new tag: $version"
            git tag $version
            git push origin refs/tags/$version
          else
            echo "Skipping: tag $version already exists."
          fi

          echo "tag=$version" >> $GITHUB_OUTPUT

  release:
    name: Create Release with Artifacts
    if: ${{ success() }}
    needs: [ create_tag ]

    runs-on: ubuntu-latest

    env:
      REPO_NAME: ${{ github.event.repository.name }}

    steps:
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v11
        with:
          ref: ${{ github.ref }}
          search_artifacts: true
          workflow: ci.yaml

      - name: Zip Artifacts
        run: zip -r ${REPO_NAME}.zip . -x *.sigstore.json

      - name: Create Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          name: ${{ needs.create_tag.outputs.tag }}
          tag_name: ${{ needs.create_tag.outputs.tag }}
          generate_release_notes: true
          files: |
            ${{ env.REPO_NAME }}.zip
            *.sigstore.json
          draft: ${{ inputs.is_draft || false }}
          prerelease: ${{ inputs.is_prerelease || false }}
          make_latest: true
