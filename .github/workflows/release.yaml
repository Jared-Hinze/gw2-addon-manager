name: Release

on:
  workflow_dispatch:
    inputs:
      create_tag:
        description: Generate a new tag for Release
        type: boolean
        default: true

  pull_request:
    branches: [ main ]
    types:
      - closed

permissions:
  contents: read

jobs:
  generate_tag:
    name: Create next Release tag

    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.tagN.outputs.new_tag || steps.tag1.outputs.new_tag }}

    permissions:
      contents: write

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      INITIAL_VERSION: "1.0.0"
      TAG_PREFIX: v

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get tag metadata
        id: tagger
        uses: anothrNick/github-tag-action@1.73.0
        env:
          DRY_RUN: true

      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.6.0
        id: check_tag
        with:
          tag: "${{ steps.tagger.outputs.old_tag }}"

      - name: Create first tag
        id: tag1
        if: ${{ steps.check_tag.outputs.exists == 'false' }}
        uses: anothrNick/github-tag-action@1.73.0
        env:
          CUSTOM_TAG: "${{ steps.tagger.outputs.old_tag }}"

      - name: Create next tag
        id: tagN
        if: ${{ steps.check_tag.outputs.exists == 'true' }}
        uses: anothrNick/github-tag-action@1.73.0

      - name: Inspect outputs
        run: |
          echo "new_tag=${{ steps.tagger.outputs.new_tag }}"
          echo "old_tag=${{ steps.tagger.outputs.old_tag }}"
          echo "tag=${{ steps.tagger.outputs.tag }}"
          echo "part=${{ steps.tagger.outputs.part }}"
          echo "exists=${{ steps.check_tag.outputs.exists }}"

  check:
    name: Check generate_tag
    runs-on: windows-latest
    permissions:
      contents: read
    needs: [generate_tag]
    steps:
      - name: Previous Output
        run: echo "tag=${{ needs.generate_tag.outputs.tag }}"